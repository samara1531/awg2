name: Push Build OpenWrt toolchain cache

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  generate-config:
    runs-on: ubuntu-22.04
    outputs:
      job-config: ${{ steps.generate-config.outputs.job-config }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'

      - name: Get OpenWRT version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_call" ]; then
            echo "VERSION=${{ inputs.tag_name }}" >> $GITHUB_ENV
            echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: npm install

      - name: Generate Job Config
        id: generate-config
        run: node index.js ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-toolchain-cache:
    name: "Build AmneziaWG packages for OpenWrt"
    runs-on: ubuntu-22.04
    needs: generate-config
    strategy:
      matrix:
        build_env: ${{ fromJson(needs.generate-config.outputs.job-config) }}
    steps:
      - name: Checkout YAAWG repository
        uses: actions/checkout@v5
        with:
          path: amneziawg
          ref: ${{ matrix.build_env.amneziawg_version }}
          fetch-depth: 0

      - name: Checkout OpenWrt repository
        uses: actions/checkout@v5
        with:
          path: openwrt
          repository: immortalwrt/immortalwrt
          ref: ${{ inputs.openwrt_version == 'SNAPSHOT' && 'master' || format('v{0}', inputs.openwrt_version) }}
          fetch-depth: 0

      - name: Checkout ImmortalWrt Packages repository
        if: ${{ matrix.build_env.update_go }}
        uses: actions/checkout@v5
        with:
          path: packages
          repository: immortalwrt/packages
          fetch-depth: 0

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          python3-pyelftools

      - name: Update feeds
        run: |
          set -e -x
          cd openwrt
          echo "src-cpy awgopenwrt ../amneziawg" >> feeds.conf.default
          ./scripts/feeds update -a
          if [ "${{ matrix.build_env.openwrt_version }}" = "SNAPSHOT" ]; then
            base_url="https://downloads.immortalwrt.org/snapshots/targets/${{ matrix.build_env.openwrt_target }}/${{ matrix.build_env.openwrt_subtarget }}"
          else
            base_url="https://downloads.immortalwrt.org/releases/${{ matrix.build_env.openwrt_version }}/targets/${{ matrix.build_env.openwrt_target }}/${{ matrix.build_env.openwrt_subtarget }}"
          fi
          curl -fsL "$base_url/config.buildinfo" > .config
          echo "CONFIG_PACKAGE_amneziawg-go=y" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config

      - name: Update Go version
        if: ${{ matrix.build_env.update_go }}
        run: |
          set -e -x
          rm -r openwrt/feeds/packages/lang/golang
          cp -r packages/lang/golang openwrt/feeds/packages/lang

      - name: Build toolchain and kernel
        run: |
          set -e -x
          cd openwrt
          ./scripts/feeds install -a
          make defconfig
          make tools/install -j $(nproc)
          make toolchain/install -j $(nproc)
          make target/linux/compile -j $(nproc)
          export LC_ALL=C
          for deadlink in $(find . -follow -type l -printf "" 2>&1 | sed -e "s/find: '\(.*\)': Too many levels of symbolic links.*/\1/"); do
            echo "Deleting dead link: ${deadlink}"
            rm -f "${deadlink}"
          done

      - name: Save toolchain and kernel cache
        id: cache-tools-kernel-save
        uses: actions/cache/save@v4
        with:
          key: ${{ runner.os }}-openwrt-cache-toolchain-kernel-${{ matrix.build_env.openwrt_version }}-${{ matrix.build_env.openwrt_arch }}-${{ matrix.build_env.openwrt_target }}-${{ matrix.build_env.openwrt_subtarget }}
          path: |
            openwrt/.config
            openwrt/.config.old
            openwrt/feeds.conf.default
            openwrt/bin/**
            openwrt/build_dir/**
            openwrt/dl/**
            openwrt/feeds/**
            openwrt/package/**
            openwrt/staging_dir/**
            openwrt/tmp/**
